!function(){"use strict";var e=[{name:"Lembah Yosemite",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_yosemite.jpg"},{name:"Danau Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lake-louise.jpg"},{name:"Pegunungan Gundul",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_bald-mountains.jpg"},{name:"Gunung Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_latemar.jpg"},{name:"Taman Nasional Vanoise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lago.jpg"}],t=document.getElementById("name-content"),n=document.getElementById("about-content"),o=document.getElementById("popup-image"),r=document.getElementById("close-image"),i=document.getElementById("popup"),a=document.getElementById("place-image"),l=document.getElementById("popup-form"),u=document.getElementById("close-form"),c=document.getElementById("form-title"),s=(document.getElementById("edit-btn"),document.getElementById("add-btn"),document.forms.edit),m=s.elements.name,p=s.elements.about,d=document.forms.add,f=d.elements.title,y=d.elements.url,v=function(e){return e.some((function(e){return!e.validity.valid}))};function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function h(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==b(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==b(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===b(r)?r:String(r)),o)}var r}Array.from(document.querySelectorAll(".popup__input-form")).forEach((function(e){!function(e){var t=Array.from(e.querySelectorAll(".popup__input")),n=e.querySelector(".popup__submit");t.forEach((function(o){o.addEventListener("input",(function(){!function(e,t){var n=e.querySelector(".".concat(t.id,"-error"));t.validity.valid?(t.classList.remove("form__input_type_error"),n.classList.remove("form__input-error_active"),n.textContent=""):(t.classList.add(".form__input_type_error"),n.textContent=t.validationMessage,n.classList.add("form__input-error_active"))}(e,o),function(e,t){console.log(v(e)),v(e)?(t.classList.add("popup__submit_inactive"),t.disabled=!0):(t.classList.remove("popup__submit_inactive"),t.disabled=!1)}(t,n)}))}))}(e)}));var g=function(){function e(t,n){var o=t.items,r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.items=o,this.renderer=r,this.classSelector=n}var t,n;return t=e,(n=[{key:"doDelete",value:function(e){var t=document.querySelectorAll(".elements__card"),n=this.items.findIndex((function(t){return t.name===e}));t[n].remove(),this.items.splice(n,1),console.log(n)}},{key:"Renderer",value:function(){var e=this;this.items.forEach((function(t){var n=new e.renderer(t.name,t.link).render(template);e.classSelector.appendChild(n)}))}},{key:"Clear",value:function(){this.classSelector.innerHTML=""}},{key:"addItem",value:function(e){this.classSelector.append(e)}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function _(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==S(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==S(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===S(r)?r:String(r)),o)}var r}var w=function(){function e(t,n,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.link=t,this.name=n,this.popupSelector=o}var t,n;return t=e,(n=[{key:"OpenImage",value:function(){i.classList.add("popup_opened"),this.popupSelector.classList.add("popup__image_opened"),a.src=this.link,document.getElementById("place-name").textContent=this.name}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function k(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==E(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==E(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===E(r)?r:String(r)),o)}var r}var L=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.about=n}var o,r;return o=e,(r=[{key:"getUserInfo",value:function(){m.value=this.name,p.value=this.about}},{key:"setUserInfo",value:function(){t.textContent=m.value,n.textContent=p.value}}])&&k(o.prototype,r),Object.defineProperty(o,"prototype",{writable:!1}),e}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function P(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==I(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==I(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===I(r)?r:String(r)),o)}var r}var j=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popupSelector=t}var o,r;return o=e,r=[{key:"openEditform",value:function(){var e=new L(t.textContent,n.textContent);i.classList.add("popup_opened"),this.popupSelector.classList.add("popup__container_opened"),c.textContent="Edit profile",document.getElementById("add").style.display="none",document.getElementById("edit").style.display="grid",e.getUserInfo()}},{key:"openPlaceform",value:function(){i.classList.add("popup_opened"),this.popupSelector.classList.add("popup__container_opened"),c.textContent="Tempat baru",document.getElementById("edit").style.display="none",document.getElementById("add").style.display="grid"}}],r&&P(o.prototype,r),Object.defineProperty(o,"prototype",{writable:!1}),e}();function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function B(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==C(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==C(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===C(r)?r:String(r)),o)}var r}var O=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popupSelector=t}var t,n;return t=e,(n=[{key:"Open",value:function(e,t,n){var o=new j(this.popupSelector),r=new w(t,n,this.popupSelector);"add"===e?o.openPlaceform():"edit"===e?o.openEditform():"image"===e&&r.OpenImage(),this.setEventListener()}},{key:"Close",value:function(){i.classList.remove("popup_opened"),l.classList.remove("popup__container_opened"),o.classList.remove("popup__image_opened"),m.value="",p.value="",f.value="",y.value="",document.querySelectorAll(".popup__submit").forEach((function(e){e.classList.add("popup__submit_inactive"),e.disabled=!0}))}},{key:"_handleEscClose",value:function(e){27==e.keyCode&&this.Close()}},{key:"setEventListener",value:function(){var e=this;u.addEventListener("click",(function(){return e.Close()})),r.addEventListener("click",(function(){return e.Close()})),document.addEventListener("keydown",(function(t){return e._handleEscClose(t)})),this.popupSelector.addEventListener("click",(function(e){e.stopPropagation()})),i.addEventListener("click",(function(){e.Close()}))}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),T=(document.getElementById("name-content"),document.getElementById("about-content"),document.getElementById("popup-form")),x=document.getElementById("edit-btn"),D=document.getElementById("add-btn"),q=document.forms.edit,A=(q.elements.name,q.elements.about,document.forms.add),z=A.elements.title,R=A.elements.url,U=new O(T),M=new L;function G(e){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},G(e)}function H(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==G(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==G(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===G(r)?r:String(r)),o)}var r}q.addEventListener("submit",(function(e){e.preventDefault(),M.setUserInfo(),U.Close()})),A.addEventListener("submit",(function(t){var n;t.preventDefault(),n=new g({items:e,renderer:F},holder),e.unshift({name:z.value,link:R.value}),n.Clear(),n.Renderer(),U.Close()})),x.addEventListener("click",(function(){return U.Open("edit")})),D.addEventListener("click",(function(){return U.Open("add")}));var N=function(){function e(t,n){var o=t.items,r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.items=o,this.renderer=r,this.classSelector=n}var t,n;return t=e,(n=[{key:"doDelete",value:function(e){var t=document.querySelectorAll(".elements__card"),n=this.items.findIndex((function(t){return t.name===e}));t[n].remove(),this.items.splice(n,1),console.log(n)}},{key:"Renderer",value:function(){var e=this;this.items.forEach((function(t){var n=new e.renderer(t.name,t.link).render(template);e.classSelector.appendChild(n)}))}},{key:"Clear",value:function(){this.classSelector.innerHTML=""}},{key:"addItem",value:function(e){this.classSelector.append(e)}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function V(e){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},V(e)}function Y(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==V(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==V(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===V(r)?r:String(r)),o)}var r}var F=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e,this._link=n}var n,r;return n=t,r=[{key:"_doDelete",value:function(n){new N({items:e,renderer:t},holder).doDelete(n)}},{key:"_doLike",value:function(e){e.target.classList.toggle("elements__like-black")}},{key:"addEventDelete",value:function(e){var t=this;e.getElementById("delete").addEventListener("click",(function(){return t._doDelete(t._name)}))}},{key:"addEventOpen",value:function(e){var t=this,n=new O(o);e.getElementById("photo").addEventListener("click",(function(){return n.Open("image",t._link,t._name)}))}},{key:"addEventLike",value:function(e){e.getElementById("like").addEventListener("click",this._doLike)}},{key:"Place",value:function(e,t,n,o){e.getElementById(t)[n]=o}},{key:"render",value:function(e){var t=e.content.cloneNode(!0);return this.Place(t,"placename","innerText",this._name),this.Place(t,"photo","src",this._link),this.addEventDelete(t),this.addEventOpen(t),this.addEventLike(t),t}}],r&&Y(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();new g({items:e,renderer:F},holder).Renderer()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,